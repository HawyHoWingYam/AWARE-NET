# ================================================================
# AWARE-NET Dependencies (Updated 2025-01-20)
# Tested with PyTorch 2.7.1+cu128, RTX 5060Ti, Windows
# ================================================================

# Core PyTorch ecosystem - Manual installation required for RTX 5060Ti/5090
# Install with: conda install pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch -c nvidia
torch>=2.7.0  # Latest PyTorch with CUDA 12.8 support
torchvision>=0.20.0  # Compatible with PyTorch 2.7+
torchaudio>=2.5.0  # Audio processing (optional for this project)

# GPU Video Processing (Windows optimized)
decord>=0.6.0  # High-performance GPU video processing for Windows
opencv-python>=4.10.0  # Video reading, frame extraction (CPU fallback)

# Advanced Face Detection (PyTorch 2.7+ compatible)
insightface>=0.7.3  # High-performance GPU face detection (recommended)
onnxruntime-gpu>=1.16.0  # Required for InsightFace GPU acceleration
mediapipe>=0.10.11  # Google's optimized face detection with GPU support
ultralytics>=8.3.0  # YOLOv8 for general object/face detection
mtcnn>=0.1.1  # Lightweight face detection backup

# Pre-trained models and utilities
timm>=0.9.0  # PyTorch Image Models

# Data science and evaluation
scikit-learn>=1.6.0  # Updated for better performance
pandas>=2.2.0  # Data manipulation and analysis
numpy>=2.1.0  # Fundamental numerical computing (PyTorch 2.7+ compatible)

# Image processing
Pillow>=11.0.0  # Latest PIL fork with security updates
scikit-image>=0.24.0  # Advanced image processing

# Machine learning
lightgbm>=4.0.0  # Gradient boosting for meta-model training

# Data augmentation
albumentations>=1.4.0  # Advanced data augmentation

# Visualization
matplotlib>=3.10.0  # Plotting and chart generation
seaborn>=0.13.0  # Statistical data visualization

# Utilities
tqdm>=4.67.0  # Progress bars for data processing and training
requests>=2.31.0  # HTTP requests for downloading datasets

# Development and monitoring
jupyterlab>=4.0.0  # Interactive development
tensorboard>=2.15.0  # Training visualization and monitoring
wandb>=0.16.0  # Experiment tracking and visualization (optional)

# Configuration and data handling
PyYAML>=6.0  # YAML configuration files

# ================================================================
# REMOVED PACKAGES (Incompatible with PyTorch 2.7+)
# ================================================================
# facenet-pytorch  # Requires torch<2.3.0, incompatible with PyTorch 2.7+

# ================================================================
# INSTALLATION NOTES
# ================================================================
# 1. Install PyTorch first with CUDA support:
#    conda install pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch -c nvidia
#
# 2. For Windows users with pip DLL errors:
#    Use conda instead: conda install pandas numpy scikit-learn matplotlib seaborn -c conda-forge
#
# 3. GPU verification:
#    python -c "import torch; print(f'CUDA available: {torch.cuda.is_available()}')"
#
# 4. Multi-threading optimization:
#    The preprocessing script supports 2-4 parallel workers for optimal GPU utilization
#
# 5. Performance benchmarks:
#    - Single-thread: 1.55s/video, 30-40% GPU utilization
#    - Multi-thread (4 workers): 0.4-0.8s/video, 70-85% GPU utilization
#
# ================================================================
# TESTED CONFIGURATION
# ================================================================
# OS: Windows 11
# GPU: RTX 5060Ti (16GB VRAM)
# Python: 3.13.5
# PyTorch: 2.7.1+cu128
# Status: âœ… All features working, multi-threading operational